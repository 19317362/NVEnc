# NVEnc
# continuous integration settings

environment:
  matrix:
    - PLATFORM: Win32
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015

    - PLATFORM: x64
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019

configuration:
 - RelStatic

branches:
  only:
    - master
    - appveyor_test

init:
  - ps: Set-WinSystemLocale ja-JP
  - ps: Start-Sleep -s 15
  - ps: Restart-Computer
  - ps: Start-Sleep -s 15
  - git config --global core.autocrlf input

install:
  - git submodule update --init --recursive
  - mkdir c:\yasm
  - if "%PLATFORM%" == "x64"   curl -o "c:\yasm\yasm.exe" http://www.tortall.net/projects/yasm/releases/yasm-1.3.0-win64.exe
  - if "%PLATFORM%" == "Win32" curl -o "c:\yasm\yasm.exe" http://www.tortall.net/projects/yasm/releases/yasm-1.3.0-win32.exe
  - set PATH=c:\yasm;%PATH%
  - yasm --version
  - set PATH=C:\Python38-x64;%PATH%
  - python --version
  - mkdir c:\hdr10plus_gen
  - curl -L -o "c:\hdr10plus_gen\hdr10plus_gen_0.00_%PLATFORM%.7z" https://github.com/rigaya/hdr10plus_gen/releases/download/0.00/hdr10plus_gen_0.00_%PLATFORM%.7z
  - 7z x -oC:\hdr10plus_gen\ "c:\hdr10plus_gen\hdr10plus_gen_0.00_%PLATFORM%.7z"

before_build:
  - if "%PLATFORM%" == "x64" appveyor DownloadFile https://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_441.22_win10.exe -FileName cuda_10.2.89_441.22_win10.exe
  - if "%PLATFORM%" == "x64" cuda_10.2.89_441.22_win10.exe -s nvcc_10.2 cudart_10.2 curand_10.2 curand_dev_10.2 npp_10.2 npp_dev_10.2 nvml_dev_10.2 nvrtc_10.2 nvrtc_dev_10.2 visual_studio_integration_10.2
  - if "%PLATFORM%" == "x64" set PATH=%ProgramFiles%\NVIDIA GPU Computing Toolkit\CUDA\v10.2\bin;%PATH%
  - if "%PLATFORM%" == "x64" set CUDA_PATH=%ProgramFiles%\NVIDIA GPU Computing Toolkit\CUDA\v10.2
  - if "%PLATFORM%" == "x64" set CUDA_PATH_V10_2=%CUDA_PATH%
  - if "%PLATFORM%" == "Win32" appveyor DownloadFile https://developer.nvidia.com/compute/cuda/8.0/prod/local_installers/cuda_8.0.44_windows-exe -FileName cuda_8.0.44_windows.exe
  - if "%PLATFORM%" == "Win32" cuda_8.0.44_windows.exe -s compiler_8.0 command_line_tools_8.0 cudart_8.0 curand_8.0 curand_dev_8.0 npp_8.0 npp_dev_8.0 nvml_dev_8.0 visual_studio_integration_8.0
  - if "%PLATFORM%" == "Win32" set PATH=%ProgramFiles%\NVIDIA GPU Computing Toolkit\CUDA\v8.0\bin;%PATH%
  - if "%PLATFORM%" == "Win32" set CUDA_PATH=%ProgramFiles%\NVIDIA GPU Computing Toolkit\CUDA\v8.0
  - if "%PLATFORM%" == "Win32" set CUDA_PATH_V8_0=%CUDA_PATH%
  - git clone https://github.com/vapoursynth/vapoursynth.git ..\vapoursynth
  - git clone -b MT https://github.com/pinterf/AviSynthPlus.git ..\avisynthplus
  - git clone https://github.com/maki-rxrz/Caption2Ass_PCR.git ..\caption2ass
  - for /f "usebackq tokens=*" %%i IN (`cd`) DO @set CURRENT_DIR=%%i
  - set AVISYNTH_SDK=%CURRENT_DIR%\..\AviSynthPlus\avs_core
  - set VAPOURSYNTH_SDK=%CURRENT_DIR%\..\vapoursynth
  - set CAPTION2ASS_SRC=%CURRENT_DIR%\..\caption2ass\src
  - echo %CURRENT_DIR%
  - echo %PLATFORM%
  - echo %CONFIGURATION%
  - echo %AVISYNTH_SDK%
  - echo %VAPOURSYNTH_SDK%
  - echo %CAPTION2ASS_SRC%
  - ps: |
      $version = $null
      if (Test-Path Env:APPVEYOR_REPO_TAG_NAME)
      {
          $version = (Get-Item Env:APPVEYOR_REPO_TAG_NAME).Value
      }
      
      if ([string]::IsNullOrEmpty($version))
      {
          $version = $env:APPVEYOR_BUILD_VERSION + '_Alpha'
      }
      $env:BUILD_VERSION=$version

  - echo %BUILD_VERSION%
  - appveyor UpdateBuild -Version "%BUILD_VERSION%"

build:
  parallel: true
  project: NVEnc.sln

after_build:
  - mkdir NVEncC_Release
  - copy _build\%PLATFORM%\%CONFIGURATION%\NVEncC*.exe NVEncC_Release
  - copy _build\%PLATFORM%\%CONFIGURATION%\NVEncC*.exe NVEncC_Release
  - copy _build\%PLATFORM%\%CONFIGURATION%\*.dll NVEncC_Release
  - copy C:\hdr10plus_gen\hdr10plus_gen.exe NVEncC_Release
  - if "%PLATFORM%" == "x64" copy "%CUDA_PATH%\bin\nvrtc64_102_0.dll" NVEncC_Release
  - if "%PLATFORM%" == "x64" copy "%CUDA_PATH%\bin\nvrtc-builtins64_102.dll" NVEncC_Release
  - 7z a -mx9 NVEncC_%BUILD_VERSION%_%PLATFORM%.7z .\NVEncC_Release\*

test_script:
  - if "%PLATFORM%" == "Win32" python check_options.py -exe _build\%PLATFORM%\%CONFIGURATION%\NVEncC.exe
  - if "%PLATFORM%" == "x64"   python check_options.py -exe _build\%PLATFORM%\%CONFIGURATION%\NVEncC64.exe

artifacts:
  - path: NVEncC_%BUILD_VERSION%_%PLATFORM%.7z
    name: NVEncC_%BUILD_VERSION%_%PLATFORM%

deploy:
  provider: GitHub
  auth_token:
    secure: IDRwZWN1uQaTxb64SQnTDNJR5KPtCFPL3Mln9GrdZ7TSiyec/o1KXpOuh/50ZO5A
  artifact: NVEncC_%BUILD_VERSION%_%PLATFORM%
  draft: false
  prerelease: false
  on:
    branch: master
    appveyor_repo_tag: true
